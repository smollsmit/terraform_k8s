{{- if .Values.job.enabled -}}
  {{- $root := . -}}
  {{- $appname := printf "%s" (include "name" .) -}}
  {{- $jobName :=  printf "%s-%s" (include "name" .) "job" -}}
  {{- range $key, $value := .Values.job.spec }}
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-3"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    helm.sh/chart: "{{$root.Chart.Name}}-{{$root.Chart.Version}}"
    job: {{ $jobName }}
  name: {{ $jobName }}-{{ $key }}
spec:
  backoffLimit: 6
  completions: 1
  parallelism: 1
  template:
    metadata:
      name: {{ $jobName }}-{{ $key }}
      labels:
        helm.sh/chart: "{{$root.Chart.Name}}-{{$root.Chart.Version}}"
        job: {{ $jobName }}
    spec:
      containers:
      - name: {{ $key }}
        command: 
        {{- range $value.command }}
        - {{ . }}
        {{- end }}
        args:
        {{- range $value.args }}
        - {{ . }}
        {{- end }}
        {{- if $root.Values.configmap }}
        envFrom:
        - configMapRef:
            name: {{ $appname }}
        {{- end }}
        env:
        {{- if $root.Values.secrets }}
        {{- range $key, $value := $root.Values.secrets }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              key: {{ $value }}
              name: {{ $appname }}
        {{- end }}
        {{- end }}
        image: {{ $root.Values.image.repository }}:{{ $root.Values.image.tag }}
        imagePullPolicy: Always
    {{- if $root.Values.nodeSelector }}
      nodeSelector:
{{ toYaml $root.Values.nodeSelector | indent 8 }}
    {{- end }}
      restartPolicy: Never
  {{- end -}}
{{- end -}}
